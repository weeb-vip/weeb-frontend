name: Semantic Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false # <--- this
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: corepack enable && yarn set version stable && yarn install
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - uses: actions/checkout@v3
      - name: Set env
        run: |
          git fetch --tags
          export GITHUB_REF_NAME=$(git describe --tags --abbrev=0)
          echo "RELEASE_VERSION=$GITHUB_REF_NAME" >> $GITHUB_ENV
      - name: checkout argocd repo
        uses: actions/checkout@v3
        with:
          repository: 'weeb-vip/weeb-argocd'
          token: ${{ secrets.ACCESS_TOKEN }}
          path: 'argocd'
      - name: deploy to argocd
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REPO_NAME: ${{ env.REPO_NAME }}
        # pull argocd repo and push to argocd
        run: |
          RELEASE_VERSION=$(echo $RELEASE_VERSION | sed 's/v//')
          cd argocd && find . -type f -name '*.yaml' -print0 | xargs -0 sed -E -i 's/(tag:[[:space:]]).*( # '"$REPO_NAME"')/\1'"$RELEASE_VERSION"'\2/'
          git config --global user.email "noreply@weeb.vip"
          git config --global user.name "weeb-vip"
          git add .
          git commit -m "feat: $REPO_NAME $RELEASE_VERSION"
          git push origin main

#      - name: Release
#        env:
#          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#        run: npx semantic-release
