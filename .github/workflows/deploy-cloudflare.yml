name: Deploy to Cloudflare Pages

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Select a Git tag to deploy'
        required: true
        type: choice
        options:
          - v1.76.5
          - v1.76.4
          - v1.76.3
          - v1.76.2
          - v1.76.1
          - v1.76.0
          - v1.75.7
          - v1.75.6
          - v1.75.5
          - v1.75.4
          - v1.75.3
          - v1.75.2
          - v1.75.1
          - v1.75.0
          - v1.74.1
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - production
        default: staging

env:
  NODE_VERSION: '20'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages

    steps:
      - name: Checkout specific tag
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set environment variables
        run: |
          echo "APP_CONFIG=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "VITE_APP_VERSION=${{ inputs.tag }}" >> $GITHUB_ENV

      - name: Build for Cloudflare Pages
        run: |
          # Use Cloudflare-specific config and build
          cp astro.config.cloudflare.mjs astro.config.mjs

          echo "Building with Cloudflare adapter..."
          yarn build

          # Verify the build output structure
          echo "=== Build output structure ==="
          ls -la dist/

          # Check for _worker.js
          if [ -f "dist/_worker.js" ]; then
            echo "‚úÖ Found _worker.js"
          else
            echo "‚ùå Missing _worker.js - checking for functions directory"
            if [ -d "dist/_worker" ]; then
              echo "Found _worker directory"
              ls -la dist/_worker/
            fi
          fi
        env:
          APP_CONFIG: ${{ inputs.environment }}
          VITE_APP_VERSION: ${{ inputs.tag }}

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./dist --project-name=weeb-${{ inputs.environment }} --branch=${{ inputs.environment == 'production' && 'main' || 'staging' }}

      - name: Create deployment comment
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = `https://weeb-${{ inputs.environment }}.pages.dev`;

            // Create a deployment status
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ inputs.tag }}',
              environment: '${{ inputs.environment }}',
              description: 'Cloudflare Pages deployment',
              auto_merge: false,
              required_contexts: []
            });

            console.log(`Deployed ${{ inputs.tag }} to ${{ inputs.environment }}: ${deploymentUrl}`);

      - name: Notify deployment status
        run: |
          echo "‚úÖ Successfully deployed ${{ inputs.tag }} to ${{ inputs.environment }}"
          echo "üåê Deployment URL: https://weeb-${{ inputs.environment }}.pages.dev"
