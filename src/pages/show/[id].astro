---
import SvelteFullWidthLayout from '../../layouts/SvelteFullWidthLayout.astro';
import ShowContentWithProvider from '../../svelte/components/ShowContentWithProvider.svelte';
import { GraphQLClient } from 'graphql-request';
import { ensureConfigLoaded } from '../../services/config-loader';

export const prerender = false;

// Get the anime ID from the URL parameters
const { id } = Astro.params;

if (!id) {
  return Astro.redirect('/404');
}

// Access SSR auth data and config
const { auth, config } = Astro.locals;

// Fetch basic anime info for SEO
let animeTitle = 'Anime Details';
let animeDescription = 'View anime details, episodes, and information';
let animeImage = '/assets/og-image.jpg';

try {
  console.log('üåê Show Details SSR GraphQL URL:', config.graphql_host);
  const client = new GraphQLClient(config.graphql_host, {
    headers: {
      ...(auth.authToken && { Authorization: `Bearer ${auth.authToken}` })
    }
  });

  // Simple query to get basic anime info for SEO
  const basicAnimeQuery = `
    query GetBasicAnimeInfo($id: ID!) {
      anime(id: $id) {
        id
        titleEn
        titleJp
        description
        imageUrl
      }
    }
  `;

  const animeData = await client.request(basicAnimeQuery, { id });

  if (animeData?.anime) {
    animeTitle = animeData.anime.titleEn || animeData.anime.titleJp || 'Anime Details';
    animeDescription = animeData.anime.description
      ? `${animeData.anime.description.substring(0, 160)}...`
      : `Watch and track ${animeTitle} episodes, get notifications, and manage your anime watchlist on WeebVIP.`;

    if (animeData.anime.imageUrl) {
      animeImage = `https://cdn.weeb.vip/weeb-staging/${encodeURIComponent(animeData.anime.imageUrl)}`;
    }
  }
} catch (error) {
  console.error('[SSR] Failed to fetch basic anime info for SEO:', error);
  // Fallback to generic SEO data
}
---

<SvelteFullWidthLayout
  title={animeTitle}
  description={animeDescription}
  image={animeImage}
>
  <ShowContentWithProvider animeId={id} client:load />
</SvelteFullWidthLayout>
