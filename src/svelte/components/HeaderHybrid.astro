---
import AutocompleteAdvanced from '../../svelte/components/AutocompleteAdvanced.svelte';
import LoginModalHandler from '../../svelte/components/LoginModalHandler.svelte';
import UserProfileHandler from '../../svelte/components/UserProfileHandler.svelte';
import AuthInitializer from '../../svelte/components/AuthInitializer.svelte';
---

<header class="fixed top-0 left-0 right-0 z-40 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 p-4 h-24 transition-colors duration-300">

  <!-- Mobile/Tablet Header -->
  <div class="flex lg:hidden w-full items-center space-x-3 h-16">
    <a href="/" class="flex-shrink-0">
      <img
        src="https://cdn.weeb.vip/images/logo6-rev-sm_sm.png"
        alt="logo"
        width="40"
        height="40"
        loading="eager"
        decoding="async"
        class="w-10 h-10"
      />
    </a>

    <div class="flex-grow px-2">
      <AutocompleteAdvanced client:load />
    </div>

    <div class="flex-shrink-0">
      <UserProfileHandler client:load isMobile={true} />
    </div>
  </div>

  <!-- Desktop Header -->
  <div class="hidden lg:block relative h-16">
    <!-- Left side: Logo and branding -->
    <div class="absolute left-0 top-1/2 -translate-y-1/2 flex items-center space-x-4">
      <a href="/" class="flex flex-row items-center space-x-4">
        <img
          src="https://cdn.weeb.vip/images/logo6-rev-sm_sm.png"
          alt="logo"
          width="56"
          height="56"
          loading="eager"
          decoding="async"
          class="w-14 h-14"
        />
        <!-- WeebVipWordmark -->
        <div class="inline-flex items-center gap-2 sm:gap-3" role="img" aria-label="WEEB VIP wordmark">
          <!-- WeebMorphLogo -->
          <span
            class="relative inline-grid group/logo select-none whitespace-nowrap flex-shrink-0 cursor-pointer"
            id="logo-morph"
          >
            <span
              class="col-start-1 row-start-1 font-light text-transparent bg-clip-text text-center bg-gray-800 dark:bg-gray-300 text-4xl md:text-4xl tracking-[0.28em] transition-all duration-300 ease-out opacity-100 translate-y-0 group-hover/logo:opacity-0 group-hover/logo:-translate-y-1"
              id="weeb-text"
            >
              WEEB
            </span>
            <span
              lang="ja"
              class="col-start-1 row-start-1 font-light text-transparent bg-clip-text text-center bg-gray-800 dark:bg-gray-300 text-4xl md:text-4xl tracking-normal transition-all duration-300 ease-out opacity-0 translate-y-1 group-hover/logo:opacity-100 group-hover/logo:translate-y-0"
              id="katakana-text"
            >
              ウィーブ
            </span>
          </span>
          <!-- VIP Badge -->
          <span class="inline-flex items-center gap-3 px-3 sm:px-4 py-1.5 rounded-2xl dark:bg-slate-900/80 ring-1 ring-slate-700 dark:ring-slate-300/20 transition-all duration-300">
            <span class="text-gray-800 dark:text-slate-50 font-black font-light tracking-[0.35em] transition-colors duration-300 text-base md:text-base">VIP</span>
            <span class="w-2.5 h-2.5 rounded-full bg-emerald-500 transition-all duration-300" aria-hidden="true"></span>
          </span>
        </div>
      </a>
    </div>

    <!-- Center: Autocomplete (positioned between left and right elements) -->
    <div class="absolute top-1/2 -translate-y-1/2 px-4" style="left: 22rem; right: 12rem;">
      <div class="flex justify-center">
        <div class="w-full max-w-sm">
          <AutocompleteAdvanced client:load />
        </div>
      </div>
    </div>

    <!-- Right side: Dark mode and user profile -->
    <div class="absolute right-0 top-1/2 -translate-y-1/2 flex items-center space-x-6">
      <!-- Dark Mode Toggle -->
      <button
        class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-300 w-10 h-10 flex items-center justify-center"
        aria-label="Toggle dark mode"
        id="dark-mode-toggle"
      >
        <svg class="w-5 h-5 text-gray-700 dark:text-gray-300 dark-mode-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path class="sun-icon" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"/>
          <path class="moon-icon hidden" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>
        </svg>
      </button>

      <!-- User Profile Handler -->
      <div class="ml-6">
        <UserProfileHandler client:load isMobile={false} />
      </div>
    </div>
  </div>
</header>

<!-- Auth State Initializer (Client-side) -->
<AuthInitializer client:load />

<!-- Login/Register Modal Handler (Client-side) -->
<LoginModalHandler client:load />

<script>
  // Client-side interactivity
  document.addEventListener('DOMContentLoaded', () => {
    // Dark mode toggle
    const darkModeToggle = document.getElementById('dark-mode-toggle');
    const sunIcon = document.querySelector('.sun-icon');
    const moonIcon = document.querySelector('.moon-icon');

    // Check initial dark mode state
    let isDarkMode = document.documentElement.classList.contains('dark');
    updateDarkModeIcon();

    function updateDarkModeIcon() {
      if (isDarkMode) {
        sunIcon?.classList.remove('hidden');
        moonIcon?.classList.add('hidden');
      } else {
        sunIcon?.classList.add('hidden');
        moonIcon?.classList.remove('hidden');
      }
    }

    darkModeToggle?.addEventListener('click', () => {
      isDarkMode = !isDarkMode;
      if (isDarkMode) {
        document.documentElement.classList.add('dark');
        localStorage.setItem('theme', 'dark');
      } else {
        document.documentElement.classList.remove('dark');
        localStorage.setItem('theme', 'light');
      }
      updateDarkModeIcon();
    });

    // Logo morph interaction
    const logoMorph = document.getElementById('logo-morph');
    let isClicked = false;

    logoMorph?.addEventListener('click', () => {
      isClicked = !isClicked;
      const weebText = document.getElementById('weeb-text');
      const katakanaText = document.getElementById('katakana-text');

      if (isClicked) {
        weebText?.classList.add('opacity-0', '-translate-y-1');
        weebText?.classList.remove('opacity-100', 'translate-y-0');
        katakanaText?.classList.add('opacity-100', 'translate-y-0');
        katakanaText?.classList.remove('opacity-0', 'translate-y-1');
      } else {
        weebText?.classList.add('opacity-100', 'translate-y-0');
        weebText?.classList.remove('opacity-0', '-translate-y-1');
        katakanaText?.classList.add('opacity-0', 'translate-y-1');
        katakanaText?.classList.remove('opacity-100', 'translate-y-0');
      }
    });

    // Note: Login/Register button handlers are now managed by UserProfileHandler Svelte component
  });
</script>
