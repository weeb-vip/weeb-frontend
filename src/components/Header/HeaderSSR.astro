---
// Server-side header that can include client-side components
---

<header class="sticky top-0 z-40 bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 p-4 transition-colors duration-300">

  <!-- Mobile Header -->
  <div class="flex sm:hidden w-full items-center space-x-4">
    <a href="/">
      <img
        src="https://cdn.weeb.vip/images/logo6-rev-sm_sm.png"
        alt="logo"
        width="40"
        height="40"
        loading="eager"
        decoding="async"
        class="w-10 h-10"
      />
    </a>

    <div class="flex-grow">
      <div class="relative">
        <input
          type="text"
          placeholder="Search anime..."
          class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition-colors duration-300"
        />
        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
          </svg>
        </div>
      </div>
    </div>

    <button class="p-4" aria-label="Open menu">
      <svg class="w-6 h-6 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
      </svg>
    </button>
  </div>

  <!-- Desktop Header -->
  <div class="hidden sm:flex flex-row items-center justify-between space-x-4 mt-4 sm:mt-0">
    <div class="flex items-center space-x-4">
      <a href="/" class="flex flex-row space-x-4">
        <img
          src="https://cdn.weeb.vip/images/logo6-rev-sm_sm.png"
          alt="logo"
          width="56"
          height="56"
          loading="eager"
          decoding="async"
          class="w-14 h-14"
        />
        <!-- WeebVipWordmark -->
        <div class="inline-flex items-center gap-2 sm:gap-3" role="img" aria-label="WEEB VIP wordmark">
          <!-- WeebMorphLogo -->
          <span class="relative inline-grid group/logo select-none whitespace-nowrap flex-shrink-0">
            <span class="col-start-1 row-start-1 font-light text-transparent bg-clip-text text-center bg-gray-800 dark:bg-gray-300 text-4xl md:text-4xl tracking-[0.28em] transition-all duration-300 ease-out opacity-100 translate-y-0 group-hover/logo:opacity-0 group-hover/logo:-translate-y-1">
              WEEB
            </span>
            <span lang="ja" class="col-start-1 row-start-1 font-light text-transparent bg-clip-text text-center bg-gray-800 dark:bg-gray-300 text-4xl md:text-4xl tracking-normal transition-all duration-300 ease-out opacity-0 translate-y-1 group-hover/logo:opacity-100 group-hover/logo:translate-y-0">
              ウィーブ
            </span>
          </span>
          <!-- VIP Badge -->
          <span class="inline-flex items-center gap-3 px-3 sm:px-4 py-1.5 rounded-2xl dark:bg-slate-900/80 ring-1 ring-slate-700 dark:ring-slate-300/20 transition-all duration-300">
            <span class="text-gray-800 dark:text-slate-50 font-black font-light tracking-[0.35em] transition-colors duration-300 text-base md:text-base">VIP</span>
            <span class="w-2.5 h-2.5 rounded-full bg-emerald-500 transition-all duration-300" aria-hidden="true"></span>
          </span>
        </div>
      </a>
    </div>

    <div class="flex-grow max-w-md">
      <div class="relative">
        <input
          type="text"
          placeholder="Search anime..."
          class="w-full px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-full bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:border-transparent transition-colors duration-300"
        />
        <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
          <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
          </svg>
        </div>
      </div>
    </div>

    <div class="flex items-center space-x-4">
      <!-- Dark Mode Toggle -->
      <button class="p-2 rounded-full hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-300 w-10 h-10 flex items-center justify-center" aria-label="Toggle dark mode">
        <svg class="w-5 h-5 text-gray-700 dark:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"/>
        </svg>
      </button>

      <!-- Login Button -->
      <button class="px-4 py-2 relative rounded-full font-medium transition-colors duration-300 flex items-center justify-center whitespace-nowrap w-fit bg-blue-600 hover:bg-blue-700 text-white">
        Login
      </button>

      <!-- Register Button -->
      <button class="px-4 py-2 relative rounded-full font-medium transition-colors duration-300 flex items-center justify-center whitespace-nowrap w-fit bg-transparent hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-200 border border-gray-300 dark:border-gray-600">
        Register
      </button>
    </div>
  </div>
</header>

<!-- Load interactive components client-side -->
<script>
  import AutocompleteAdvanced from '../../svelte/components/AutocompleteAdvanced.svelte';

  // Replace search inputs with interactive autocomplete after page load
  document.addEventListener('DOMContentLoaded', () => {
    const searchInputs = document.querySelectorAll('input[placeholder="Search anime..."]');

    searchInputs.forEach((input) => {
      const parent = input.parentElement;
      if (parent) {
        // Create a container for the Svelte component
        const container = document.createElement('div');
        parent.parentNode?.replaceChild(container, parent);

        // Mount the Svelte component
        new AutocompleteAdvanced({
          target: container
        });
      }
    });
  });
</script>