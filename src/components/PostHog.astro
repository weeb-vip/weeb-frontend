---
// src/components/PostHog.astro
import { getConfig } from '../config';

const config = getConfig();
console.log("üîç PostHog config check:", {
  hasApiKey: !!config?.posthog_api_key,
  apiKey: config?.posthog_api_key ? 'PROVIDED' : 'MISSING',
  devFeaturesEnabled: __ENABLE_DEV_FEATURES__,
  isPlaywright: import.meta.env.PLAYWRIGHT
});

const shouldLoadPostHog = config?.posthog_api_key &&
                          config.posthog_api_key !== "" &&
                          !__ENABLE_DEV_FEATURES__ &&
                          !import.meta.env.PLAYWRIGHT;

console.log("üîç Should load PostHog:", shouldLoadPostHog);
---

{shouldLoadPostHog &&
  <script is:inline define:vars={{ posthogKey: config.posthog_api_key }}>
    console.log("üîç Initializing PostHog analytics...");
    !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host.replace(".i.posthog.com","-assets.i.posthog.com")+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="init me ys Ss gs ws capture je Di xs register register_once register_for_session unregister unregister_for_session Rs getFeatureFlag getFeatureFlagPayload isFeatureEnabled reloadFeatureFlags updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures on onFeatureFlags onSurveysLoaded onSessionId getSurveys getActiveMatchingSurveys renderSurvey canRenderSurvey canRenderSurveyAsync identify setPersonProperties group resetGroups setPersonPropertiesForFlags resetPersonPropertiesForFlags setGroupPropertiesForFlags resetGroupPropertiesForFlags reset get_distinct_id getGroups get_session_id get_session_replay_url alias set_config startSessionRecording stopSessionRecording sessionRecordingStarted captureException loadToolbar get_property getSessionProperty Is ks createPersonProfile Ps bs opt_in_capturing opt_out_capturing has_opted_in_capturing has_opted_out_capturing clear_opt_in_out_capturing $s debug Es getPageViewId captureTraceFeedback captureTraceMetric".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
    posthog.init(posthogKey, {
        api_host: 'https://analytics.weeb.vip',
        capture_pageview: true,
        person_profiles: 'identified_only'
    });

    // Debug logging for PostHog initialization
    console.log('üîç PostHog initialized with config:', {
        api_host: 'https://analytics.weeb.vip',
        capture_pageview: true,
        person_profiles: 'identified_only',
        key: posthogKey ? 'PROVIDED' : 'MISSING'
    });

    // Test if PostHog is working
    setTimeout(() => {
        console.log('üîç PostHog status check:', {
            loaded: !!window.posthog,
            methods: window.posthog ? Object.keys(window.posthog) : 'not available'
        });
    }, 1000);
  </script>
}
