version: 2.1
references:
  node: &node
    docker:
      - image: cimg/node:14.15.4
    environment:
      NODE_ENV: staging
      APP_CONFIG: staging

orbs:
  node: circleci/node@4.1.0
jobs:
  test:
    <<: *node
    steps:
      - checkout
        #- run:
        #  name: create npmrc
        #  command: |
        #    echo -e "@weeb.vip:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_acToken=${NPM_TOKEN}" > .npmrc
      - run:
          name: remove .npmrc
          command: rm .npmrc
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install
          name: Run YARN install
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: yarn run test
          name: Run YARN tests
  testbuild:
    <<: *node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install
          name: Run YARN install
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          command: |
            yarn build
          name: build
  deploy:
    docker:
      - image: cimg/node:14.15.4
    environment:
      NODE_ENV: staging
      REPOSITORY_USER: admin
      REPOSITORY_ADDRESS: https://harbor.floret.dev
      APP_CONFIG: staging
    steps:
      - checkout
      #- run:
      #    name: create npmrc
      #    command: |
      #      echo -e "@weeb-vip:registry=https://npm.pkg.github.com\n//npm.pkg.github.com/:_authToken=${NPM_TOKEN}" > .npmrc
      - run:
          name: remove .npmrc
          command: rm .npmrc
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install
          name: Run YARN install
      - save_cache:
          key: v1-deps-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run: npx semantic-release
      - run:
          name: Login to Container Registry
          command: |
            apk add --no-cache openssl
            docker login -u $REPOSITORY_USER -p $REPOSITORY_PASSWORD $REPOSITORY_ADDRESS
      - run:
          name: push image
          command: |
            export VERSION=$(node -p "require('./package.json').version" | tr -d \'\n\')
            docker build --build-arg SERVICE_VERSION=$VERSION -t harbor.floret.dev/weeb-vip/frontend:$VERSION .
            docker push harbor.floret.dev/weeb-vip/frontend:$VERSION

workflows:
  test_and_deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)$/
      - testbuild:
          filters:
            tags:
              only: /^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)$/
      - deploy:
          context: deploy
          filters:
            branches:
              only: main
            tags:
              only: /^([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)\.([0-9]|[1-9][0-9]*)$/
          requires:
            - test

